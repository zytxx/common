vue   知识点
 是一套构建用户界面的渐进式框架
 vue 数据驱动  通过操作数据  改变页面的效果
 渐进式框架   数据双向绑定   组件化开发
 vuex 框架  组件通信
 状态管理器   管理数据的状态

vue.js 是一个轻量级的渐进式框架
它的特点是：
简洁： HTML 模板 + JSON 数据，再创建一个 Vue 实例，就这么简单。
数据驱动： 自动追踪依赖的模板表达式和计算属性。
组件化：    可复用的组件来构造界面。
轻量： ~24kb min+gzip，无依赖。
快速： 精确有效的异步批量 DOM 更新。
模块友好： 通过 NPM 或 Bower 安装，无缝融入你的工作流。

有时候两个组件也需要通信(非父子关系)。在简单的场景下，可以使用一个空的Vue实例作为中央事件总线。
在复杂的情况下，我们应该考虑使用专门的状态管理模式。

为了让组件可以组合，我们需要一种方式来混合父组件的内容与子组件自己的模板。这个过程被称为内容分发
使用特殊的<solt>元素作为原始内容的插槽
单个插槽
具名插槽
作用域插槽


动态组件   is  可以让多个组件使用同一个挂载点

keep-alive    如果把切换出去的组件保留在内存中，可以保留它的状态或避免重新渲染

vue-cli（脚手架）  使用方式
1.首先安装  node.js   npm包管理工具

2.为了加快安装包的速度  安装淘宝镜像
  npm install -g cnpm --registry=https://registry.npm.taobao.org

3.全局安装自动化构建工具  webpack
  cnpm install -g webpack

4.全局安装vue脚手架
  cnpm install -g vue-cli

5.构建vue项目 vue init wwebpack  zyt(项目名称)  cd zyt

6.安装项目依赖  cnpm install    (安装之前排除node_modules文件夹 以免webstorm卡住)

7.安装一些vue-cli里面没有的依赖包

如
   vuex         | cnpm install vuex --save    vue框架   数据状态仓库  管理状态
   elementUI    | cnpm install element-ui --save
   iview        | cnpm install iview --save
   axios        | cnpm install axios --save
                | cnpm install vue-axios --save
   sass         | 第一步
                  cnpm install node-sass --save-dev
                  cnpm install sass-loader --save-dev

                  第二步，打开webpack.base.config.js在loaders里面加上
                      {
                        test: /\.scss$/,
                        loaders: ["style", "css", "sass"]
                      }
                  第三步，在需要用到scss的地方写上
                  <style lang="scss" scoped>

                  </style>
                  
                  
8.npm run dev


9.npm run build                 
npm install anywhere -g // 全局安装anywhere模块
项目npm run build以后 cd dist 命令行输入anywhere就可以预览了